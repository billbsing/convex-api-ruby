var search_data = {"index":{"searchIndex":["accountkey","key","convex","api","apierror","account","keypair","close()","create()","create_account()","create_from_text()","eql?()","export_to_text()","export_to_text()","get_account_info()","message()","new()","new()","new()","new()","public_key()","public_key()","public_key()","query()","request_funds()","sign()","sign()","sign()","submit()","to_s()","transaction_get()","transaction_post()","transaction_prepare()","transaction_submit()","transfer()","valid?()","readme"],"longSearchIndex":["accountkey","accountkey::key","convex","convex::api","convex::apierror","convex::account","convex::keypair","accountkey::key#close()","accountkey::create()","convex::api#create_account()","accountkey::create_from_text()","convex::keypair#eql?()","accountkey::key#export_to_text()","convex::keypair#export_to_text()","convex::api#get_account_info()","convex::apierror#message()","convex::api::new()","convex::apierror::new()","convex::account::new()","convex::keypair::new()","accountkey::key#public_key()","convex::account#public_key()","convex::keypair#public_key()","convex::api#query()","convex::api#request_funds()","accountkey::key#sign()","convex::account#sign()","convex::keypair#sign()","convex::api#submit()","convex::keypair#to_s()","convex::api#transaction_get()","convex::api#transaction_post()","convex::api#transaction_prepare()","convex::api#transaction_submit()","convex::api#transfer()","convex::keypair#valid?()",""],"info":[["AccountKey","","AccountKey.html","",""],["AccountKey::Key","","AccountKey/Key.html","",""],["Convex","","Convex.html","",""],["Convex::API","","Convex/API.html","",""],["Convex::APIError","","Convex/APIError.html","",""],["Convex::Account","","Convex/Account.html","","<p>require_relative “account_lib/account_lib.so”\n"],["Convex::KeyPair","","Convex/KeyPair.html","",""],["close","AccountKey::Key","AccountKey/Key.html#method-i-close","()",""],["create","AccountKey","AccountKey.html#method-c-create","()",""],["create_account","Convex::API","Convex/API.html#method-i-create_account","(key_pair)","<p>Creates a new account, using the provided <code>KeyPair</code>.\n<p>key_pair &mdash; A valid <code>Convex::KeyPair</code> object that contains …\n"],["create_from_text","AccountKey","AccountKey.html#method-c-create_from_text","(p1, p2)",""],["eql?","Convex::KeyPair","Convex/KeyPair.html#method-i-eql-3F","(other)",""],["export_to_text","AccountKey::Key","AccountKey/Key.html#method-i-export_to_text","(p1)",""],["export_to_text","Convex::KeyPair","Convex/KeyPair.html#method-i-export_to_text","(password)",""],["get_account_info","Convex::API","Convex/API.html#method-i-get_account_info","(address)","<p>Get account infomation.\n<p>address &mdash; Address of the account to get the information for.\n<p>returns &mdash; The result from …\n"],["message","Convex::APIError","Convex/APIError.html#method-i-message","()",""],["new","Convex::API","Convex/API.html#method-c-new","(url)","<p>Creates a new API object. You need to pass the network URL of the Convex network\n<p>At the moment this is …\n"],["new","Convex::APIError","Convex/APIError.html#method-c-new","(code, value)",""],["new","Convex::Account","Convex/Account.html#method-c-new","(key_pair, address)",""],["new","Convex::KeyPair","Convex/KeyPair.html#method-c-new","(import_text=nil, password=nil)","<p>Create a new <code>Convex::KeyPair</code> object\n<p>import_text &mdash; If set with a encrypted PEM text of the key.\n<p>password &mdash; "],["public_key","AccountKey::Key","AccountKey/Key.html#method-i-public_key","()",""],["public_key","Convex::Account","Convex/Account.html#method-i-public_key","()",""],["public_key","Convex::KeyPair","Convex/KeyPair.html#method-i-public_key","()",""],["query","Convex::API","Convex/API.html#method-i-query","(transaction, address=9)","<p>Query the Convex network with a <strong>convex-lisp</strong> statement.\n<p>All queries to the network are free, and you do …\n"],["request_funds","Convex::API","Convex/API.html#method-i-request_funds","(account, amount=0)","<p>Request funds from the test network. At the moment this will work since we are using a test network. …\n"],["sign","AccountKey::Key","AccountKey/Key.html#method-i-sign","(p1)",""],["sign","Convex::Account","Convex/Account.html#method-i-sign","(hash_data)",""],["sign","Convex::KeyPair","Convex/KeyPair.html#method-i-sign","(hash_data)",""],["submit","Convex::API","Convex/API.html#method-i-submit","(transaction, account)","<p>Submit a transaction to the network. As this transcation will change the network state you will need …\n"],["to_s","Convex::KeyPair","Convex/KeyPair.html#method-i-to_s","()",""],["transaction_get","Convex::API","Convex/API.html#method-i-transaction_get","(uri)",""],["transaction_post","Convex::API","Convex/API.html#method-i-transaction_post","(uri, data)",""],["transaction_prepare","Convex::API","Convex/API.html#method-i-transaction_prepare","(transaction, address, sequence_number=nil)",""],["transaction_submit","Convex::API","Convex/API.html#method-i-transaction_submit","(address, public_key, hash_data, signed_data)",""],["transfer","Convex::API","Convex/API.html#method-i-transfer","(from_account, to_address, amount)","<p>Transfer funds from an account to a given address.\n<p>from_account &mdash; The valid <code>Convex::Account</code> object that …\n"],["valid?","Convex::KeyPair","Convex/KeyPair.html#method-i-valid-3F","()",""],["README","","README_md.html","","<p>convex-api-ruby\n<p>Build and test this library\n<p>First you need to clone this repo\n"]]}}